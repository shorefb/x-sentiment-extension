document.addEventListener("DOMContentLoaded",(()=>{const e=document.getElementById("toggle"),t=document.getElementById("reset"),n=document.getElementById("stats"),o=document.getElementById("needle"),r=document.getElementById("meter-label"),s=document.getElementById("gauge-label"),a=new Map;let i="user123";function c(){let e=0,t=0,i=0,c=0;console.log("Current allSentiments in popup:",Array.from(a.entries())),a.forEach((n=>{"Positive"===n?(e++,c+=1):"Negative"===n?(t++,c-=1):"Neutral"===n&&i++}));const l=e+t+i;console.log("Sentiment counts:",{positive:e,negative:t,neutral:i,count:l}),n.innerHTML=`\n      <div>Positive: ${e}</div>\n      <div>Negative: ${t}</div>\n      <div>Neutral: ${i}</div>\n    `;const d=l>0?c/l:0;let m;m=d>0?50+50*d:50*(1+d);const E=m/100*180-90;o.style.transform=`rotate(${E}deg)`;let u="",g="";d>0?(u="POSITIVE",g="#28a745"):d<0?(u="NEGATIVE",g="#dc3545"):(u="NEUTRAL",g="#6c757d"),s.textContent=u,s.style.color=g,r.textContent=`Overall Sentiment: ${d.toFixed(2)} (${l} posts)`}async function l(){const e=Array.from(a.entries()).map((([e,t])=>({sentiment:t,timestamp:(new Date).toISOString()}))),t={userId:i,preferences:{theme:"dark"},sentimentHistory:e.length>0?e:[]};try{const e=await fetch("http://localhost:3000/api/user",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(t)}),n=await e.json();if(!e.ok)throw new Error(n.error||"Failed to save data")}catch(e){console.error("Error saving user data:",e)}}chrome.storage.local.get(["enabled"],(t=>{const n=!1!==t.enabled;e.textContent=n?"Turn Off":"Turn On"})),e.addEventListener("click",(()=>{chrome.storage.local.get(["enabled"],(t=>{const n=!(!1!==t.enabled);chrome.storage.local.set({enabled:n}),e.textContent=n?"Turn Off":"Turn On",chrome.tabs.query({active:!0,currentWindow:!0},(e=>{chrome.tabs.reload(e[0].id)}))}))})),t.addEventListener("click",(()=>{a.clear(),chrome.runtime.sendMessage({type:"RESET_SENTIMENTS"}),c(),l()})),async function(){try{const e=await fetch(`http://localhost:3000/api/user/${i}`),t=await e.json();if(!e.ok)throw new Error(t.error||"Failed to fetch data");return t.sentimentHistory&&t.sentimentHistory.length>0&&0===a.size&&t.sentimentHistory.forEach(((e,t)=>{a.has(`post-${t}`)||a.set(`post-${t}`,e.sentiment)})),Promise.resolve()}catch(e){return console.error("Error fetching user data:",e),Promise.reject(e)}}().then((()=>{c()})).catch((e=>{console.error("Error during initial fetch:",e)})),chrome.runtime.onMessage.addListener(((e,t,n)=>{console.log("Popup received message:",e),"UPDATE_SENTIMENT"===e.type?(console.log("Received sentiments:",e.sentiments),a.clear(),e.sentiments.forEach(((e,t)=>{a.set(`post-${Date.now()}-${t}`,e)})),c(),l(),n({received:!0})):"SENTIMENTS_RESET"===e.type&&(a.clear(),c(),l(),n({received:!0}))})),chrome.runtime.sendMessage({type:"REQUEST_SENTIMENT"},(e=>{console.log("Popup got REQUEST_SENTIMENT response:",e),e&&e.sentiments&&(e.sentiments.forEach(((e,t)=>{a.has(`post-${t}`)||a.set(`post-${t}`,e)})),c())}))}));